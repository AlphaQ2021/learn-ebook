user  www www;
worker_rlimit_nofile 51200;
events
{
  use epoll;
  worker_connections  51200;
}

http
{
  include                       mime.types;
  default_type                  application/octet-stream;

  server_names_hash_bucket_size 128;
  client_header_buffer_size     32k;
  large_client_header_buffers   4 32k;

  client_max_body_size          50m;
  limit_conn_zone $binary_remote_addr zone=perip:256k;
  limit_conn_log_level notice;

  log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

  sendfile        on;
  tcp_nopush      on;

  keepalive_timeout  65;
  tcp_nodelay on;

  gzip  on;
  gzip_min_length 1k;
  gzip_buffers 4 16k;
  gzip_http_version 1.0;
  gzip_comp_level 2;
  gzip_types text/plain application/x-javascript text/css application/xml;
  gzip_vary on;

  server
  {
    listen   8000;
    server_name localhost;

    location /
    {
      index  index.html;
#      root /opt/pub/media/nginx;
      root /opt/pub;
      uwsgi_pass 127.0.0.1:9000;
      include uwsgi_params;
      limit_rate_after 50m;
      limit_rate       1m;
#      uwsgi_param  UWSGI_CHDIR /opt/pub/media/nginx;
      uwsgi_param UWSGI_CHDIR /opt/pub;
      uwsgi_param  UWSGI_SCRIPT apprun;
      location ~ \.flv$
      {
        flv;
      }
      location ~ \.mp4$
      {
        mp4;
      }
    }
    location ~ .*\.(gif|jpg|jpeg|png|bmp|swf|js|css)$
    {
#      root /opt/pub/media/nginx;
	root /opt/pub;
      break;
    }
  }
}

http 
{

  upstream java_api{
    server 127.0.0.1:8090;
  }

  upstream node_api{
    server 127.0.0.1:3000;
  }

  server {
    listen       80;
    server_name  localhost;

    #charset koi8-r;
    #access_log  logs/host.access.log  main;
	
    location / {
      root   /opt/pub/web;
     # root /opt/pub/media/nginx/web;
      index  index.html index.htm;
    }

    location /local_redirect {
        rewrite  ^(.*)$ rtmp://123.57.253.199:1935/vod//upload/xtdn.flv   permanent;
    }
    location /weixin/ {
      add_header Access-Control-Allow-Origin *;
      add_header Access-Control-Allow-Headers X-Requested-With,content-type,accept;
      add_header Access-Control-Allow-Methods GET,PUT,POST,DELETE,OPTIONS;
      proxy_pass http://node_api/;
    }
  }

  server {
    listen 81;
    server_name localhost;
    location / {
      add_header Access-Control-Allow-Origin *;
      add_header Access-Control-Allow-Headers X-Requested-With,content-type,accept;
      add_header Access-Control-Allow-Methods GET,PUT,POST,DELETE,OPTIONS;
      proxy_pass http://java_api;
    }
  }
}
##########################################################################
# RTMP直播的配置
rtmp {
  server {
    listen 1935;
    chunk_size 4000;
    notify_relay_redirect on;
    application vod {
      play /opt/pub;  #点播媒体文件存放目录
      #exec_play_done  bash -c "echo vod test >> /tmp/vodtest";
      exec_play_done bash -c  "/opt/livenotesh/test.sh $name";
    }    
#	recorder audio {
#		record audio;
#		record_suffix -%d-%b-%y-%T.flv;
 #   } 
					
	# Setting for LIVE
    application live {
		live on;
		hls on;
		hls_path /opt/pub/hls;
                hls_fragment 20s;
                hls_playlist_length 3000s;
                hls_cleanup off;
		idle_streams off;
		publish_notify on;
		drop_idle_publisher 70s;
		#on_play  http://123.57.253.199:80/local_redirect;  
	        record_unique off;
		#record keyframes;  
		wait_video off;
		interleave on;
		wait_key off;
		record all;
		record_path /opt/pub/record;  
		record_max_size 10240000K;  
		record_interval 3600s;  
		record_suffix .flv;  
		#convert to HLS after record over
		#exec_record_done   /opt/ffmpeg/bin/ffmpeg -y -i xtdn.flv -vcodec copy -acodec copy -vbsf h264_mp4toannexb xtdn.ts;
		#exec m3u8-segmenter -i out.ts -n 10 -p xtdn -m test.m3u8 -u /opt/pub/media/xtdn.m3u8;
		#exec_record_done  bash  -c "echo 123 >> /tmp/clients";
		exec_record_done  bash /opt/livenotesh/test.sh $name;
    }

#hls直播
	application hls {  
		live on;  
		hls on;  
		hls_path /opt/pub/hls;  
		hls_fragment 20s;  
		hls_playlist_length 3000s;
		#hls_variant _hi  BANDWIDTH=640000;
		#hls_continuous on;
		hls_cleanup off;
       }  
	   	
	application myapp {
        live on;
 
        exec /opt/ffmpeg/bin/ffmpeg -i rtmp://localhost/myapp/$name -c:a copy  -c:v libx264 -b:v 512K -g 30 -f flv rtmp://localhost/hls/$name_low;
        }
  }
}

http
{
  # 配置RTMP虚拟机
  # VOD for FLV by RTMP
  server
  {
    listen 8080;

	location /stat {  
            rtmp_stat all;  
            rtmp_stat_stylesheet stat.xsl;  
        }  
 
    location /stat.xsl
    {
      root /home/cloudedu/nginx/nginx-rtmp-module-master/;   #在nginx-rtmp-module源码根目录
    }     


	location /control {  
		rtmp_control all;  
	}  

	#location /publish {  
	#    return 201;  
	#}  

	#location /play {  
	#    return 202;  
	#}  

	#location /record_done {  
	#    return 203;  
	#}  

	location /rtmp-publisher {  
		root /home/cloudedu/nginx/nginx-rtmp-module-master/test;  
	}  

      location /hls {  
           #server hls fragments  
           types{  
             application/vnd.apple.mpegurl m3u8;  
             video/mp2t ts;  
           }  
        alias /opt/pub/hls;  
        expires -1;  
	#add_header Cache-Control no-cache;
        }  
	}  
  }
